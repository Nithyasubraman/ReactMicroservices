ê
RD:\microservicesReactAssessment\TrainerManagement\Controllers\Trainercontroller.cs
	namespace 	
Trainer
 
. 
Data 
{ 
[ 
ApiController 
] 
[ 
Route 

(
 
$str 
) 
] 
public		 

class		 
TrainerController		 "
:		# $
ControllerBase		% 3
{

 
private 
readonly 
ApiDbContext %
_context& .
;. /
private 
int 
id 
; 
public 
TrainerController  
(  !
ApiDbContext! -
context. 5
)5 6
{ 	
_context 
= 
context 
; 
} 	
[ 	
HttpGet	 
] 
[ 	
Route	 
( 
$str 
) 
] 
public 
ActionResult 
< 
IEnumerable '
<' (
Trainer( /
>/ 0
>0 1
Get2 5
(5 6
)6 7
{ 	
return 
_context 
. 
Trainers $
.$ %
ToList% +
(+ ,
), -
;- .
} 	
} 
} ©
FD:\microservicesReactAssessment\TrainerManagement\Data\ApiDbcontext.cs
	namespace 	
Trainer
 
. 
Data 
{ 
public 
class 
ApiDbContext  
:! "
	DbContext" +
{ 
public	 
ApiDbContext 
( 
DbContextOptions -
<- .
ApiDbContext. :
>: ;
options< C
)C D
:E F
baseG K
(K L
optionsL S
)S T
{			 

}	 

public 
DbSet 
< 
Trainer 
> 
Trainers #
{$ %
get& )
;) *
set+ .
;. /
}0 1
} 
} “
TD:\microservicesReactAssessment\TrainerManagement\Migrations\20231223050104_check.cs
	namespace 	
TrainerManagement
 
. 

Migrations &
{ 
public		 

partial		 
class		 
check		 
:		  
	Migration		! *
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
AlterDatabase *
(* +
)+ ,
. 

Annotation 
( 
$str +
,+ ,
$str- 6
)6 7
;7 8
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str  
,  !
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
type+ /
:/ 0
$str1 6
,6 7
nullable8 @
:@ A
falseB G
)G H
. 

Annotation #
(# $
$str$ C
,C D(
MySqlValueGenerationStrategyE a
.a b
IdentityColumnb p
)p q
,q r
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 @
,@ A
nullableB J
:J K
falseL Q
)Q R
. 

Annotation #
(# $
$str$ 3
,3 4
$str5 >
)> ?
,? @
Designation 
=  !
table" '
.' (
Column( .
<. /
string/ 5
>5 6
(6 7
type7 ;
:; <
$str= G
,G H
nullableI Q
:Q R
falseS X
)X Y
. 

Annotation #
(# $
$str$ 3
,3 4
$str5 >
)> ?
,? @
PhoneNumber 
=  !
table" '
.' (
Column( .
<. /
long/ 3
>3 4
(4 5
type5 9
:9 :
$str; C
,C D
nullableE M
:M N
falseO T
)T U
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 2
,2 3
x4 5
=>6 8
x9 :
.: ;
Id; =
)= >
;> ?
}   
)   
.!! 

Annotation!! 
(!! 
$str!! +
,!!+ ,
$str!!- 6
)!!6 7
;!!7 8
}"" 	
	protected%% 
override%% 
void%% 
Down%%  $
(%%$ %
MigrationBuilder%%% 5
migrationBuilder%%6 F
)%%F G
{&& 	
migrationBuilder'' 
.'' 
	DropTable'' &
(''& '
name(( 
:(( 
$str((  
)((  !
;((! "
})) 	
}** 
}++ ÿ
GD:\microservicesReactAssessment\TrainerManagement\Model\TrainerModel.cs
	namespace 	
Trainer
 
. 
Data 
{ 
public 

class 
Trainer 
{ 
[ 	
Key	 
] 
public		 
int		 
Id		 
{		 
get		 
;		 
set		  
;		  !
}		" #
[ 	
Required	 
] 
public 
string 
? 
Name 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
] 
public 
string 
? 
Designation "
{# $
get% (
;( )
set* -
;- .
}/ 0
[ 	
Required	 
] 
public 
long 
PhoneNumber 
{  !
get" %
;% &
set' *
;* +
}, -
} 
} Ú
<D:\microservicesReactAssessment\TrainerManagement\Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder		 
.		 
Services		 
.		 
AddControllers		 
(		  
)		  !
;		! "
builder

 
.

 
Services

 
.

 #
AddEndpointsApiExplorer

 (
(

( )
)

) *
;

* +
builder 
. 
Services 
. 
AddDbContext 
< 
ApiDbContext *
>* +
(+ ,
options, 3
=>4 6
options7 >
.> ?
UseMySql? G
(G H
builderH O
.O P
ConfigurationP ]
.] ^
GetConnectionString^ q
(q r
$str	r Ö
)
Ö Ü
,
Ü á
new
à ã 
MySqlServerVersion
å û
(
û ü
new
ü ¢
Version
£ ™
(
™ ´
)
´ ¨
)
¨ ≠
)
≠ Æ
)
Æ Ø
;
Ø ∞
builder 
. 
Services 
. 
AddSwaggerGen 
( 
)  
;  !
builder 
. 
Services 
. 
AddCors 
( 
options  
=>! #
{ 
options 
. 
	AddPolicy 
( 
$str +
,+ ,
builder 
=> 
builder 
. 
WithOrigins 
( 
$str 0
)0 1
. 
AllowAnyMethod 
( 
) 
. 
AllowAnyHeader 
( 
) 
) 
; 
} 
) 
; 
var 
app 
= 	
builder
 
. 
Build 
( 
) 
; 
if 
( 
app 
. 
Environment 
. 
IsDevelopment !
(! "
)" #
)# $
{ 
app 
. 

UseSwagger 
( 
) 
; 
app 
. 
UseSwaggerUI 
( 
) 
; 
} 
app!! 
.!! 
UseHttpsRedirection!! 
(!! 
)!! 
;!! 
app## 
.## 
UseCors## 
(## 
$str## !
)##! "
;##" #
app%% 
.%% 
UseAuthorization%% 
(%% 
)%% 
;%% 
app'' 
.'' 
MapControllers'' 
('' 
)'' 
;'' 
app)) 
.)) 
Run)) 
()) 
))) 	
;))	 
Ä

<D:\microservicesReactAssessment\TrainerManagement\Startup.cs
public 
class 
Startup 
{ 
public 

void 
ConfigureServices !
(! "
IServiceCollection" 4
services5 =
)= >
{		 
services

 
.

 
AddCors

 
(

 
options

  
=>

! #
{ 	
options 
. 
	AddPolicy 
( 
$str 3
,3 4
builder 
=> 
builder "
. 
WithOrigins  
(  !
$str! 8
)8 9
. 
AllowAnyMethod #
(# $
)$ %
. 
AllowAnyHeader #
(# $
)$ %
)% &
;& '
} 	
)	 

;
 
} 
public 

void 
	Configure 
( 
IApplicationBuilder -
app. 1
,1 2
IWebHostEnvironment3 F
envG J
)J K
{ 
app 
. 
UseCors 
( 
$str )
)) *
;* +
} 
} 